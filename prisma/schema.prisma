// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Room {
  id                   Int         @id @default(autoincrement())
  name                 String?
  password             String?
  currentQuestionIndex Int?

  questions            Question[]
  feedbacks            Feedback[]
  teams                Team[]

  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
}

model Question {
  id            Int        @id @default(autoincrement())
  question      String
  options       String[]
  correctAnswer String

  roomId        Int
  room          Room       @relation(fields: [roomId], references: [id], onDelete: Cascade)

  feedbacks     Feedback[]
  createdAt     DateTime   @default(now())
}

model Feedback {
  id          Int      @id @default(autoincrement())
  answerGiven String

  teamId      Int
  team        Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)

  questionId  Int
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  roomId      Int
  room        Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now())
}

model Team {
  id        Int        @id @default(autoincrement())
  name      String
  roomId    Int
  room      Room       @relation(fields: [roomId], references: [id], onDelete: Cascade)
  feedbacks Feedback[]
  createdAt DateTime   @default(now())
}
